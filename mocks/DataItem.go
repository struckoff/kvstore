// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	rpcapi "github.com/struckoff/kvstore/router/rpcapi"
)

// DataItem is an autogenerated mock type for the DataItem type
type DataItem struct {
	mock.Mock
}

// ID provides a mock function with given fields:
func (_m *DataItem) ID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// RPCApi provides a mock function with given fields:
func (_m *DataItem) RPCApi() *rpcapi.DataItem {
	ret := _m.Called()

	var r0 *rpcapi.DataItem
	if rf, ok := ret.Get(0).(func() *rpcapi.DataItem); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*rpcapi.DataItem)
		}
	}

	return r0
}

// Size provides a mock function with given fields:
func (_m *DataItem) Size() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// Values provides a mock function with given fields:
func (_m *DataItem) Values() []interface{} {
	ret := _m.Called()

	var r0 []interface{}
	if rf, ok := ret.Get(0).(func() []interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]interface{})
		}
	}

	return r0
}
